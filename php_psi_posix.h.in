/* generated by configure */
#ifndef PSI_POSIX_H
#define PSI_POSIX_H

#include "php_psi_stdinc.h"

#ifdef PSI_STD_TYPES
static struct psi_std_type {
	token_t type_tag;
	const char *type_name;
	const char *alias;
} psi_std_types[] = {
	{PSI_T_INT8, "int8_t", NULL},
	{PSI_T_INT16, "int16_t", NULL},
	{PSI_T_INT32, "int32_t", NULL},
	{PSI_T_INT64, "int64_t", NULL},
	{PSI_T_UINT8, "uint8_t", NULL},
	{PSI_T_UINT16, "uint16_t", NULL},
	{PSI_T_UINT32, "uint32_t", NULL},
	{PSI_T_UINT64, "uint64_t", NULL},
@PSI_STDTYPES@
	{0}
};
#endif

#ifdef PSI_PREDEF_TYPES
static struct psi_predef_type {
	token_t type_tag;
	const char *type_name;
	const char *alias;
} psi_predef_types[] = {
@PSI_TYPES@
	{0}
};
#endif

#ifdef PSI_PREDEF_COMPOSITES
static struct psi_predef_composite {
	token_t type_tag;
	const char *type_name;
	const char *var_name;
	size_t offset;
	size_t size;
	size_t pointer_level;
	size_t array_size;
} psi_predef_composites[] = {
@PSI_COMPOSITES@
	{0}
};
#endif

#ifdef PSI_PREDEF_CONSTS
static struct psi_predef_const {
	token_t type_tag;
	const char *type_name;
	const char *var_name;
	impl_val value;
} psi_predef_consts[] = {
@PSI_CONSTS@
	{0}
};
#endif

#ifdef PSI_PREDEF_DECLS
static struct psi_predef_decl {
	enum {
		DECL_KIND_STD,
		DECL_KIND_VARARG,
		DECL_KIND_FUNCTOR
	} kind;
	token_t type_tag;
	const char *type_name;
	const char *var_name;
	size_t pointer_level;
	size_t array_size;
} psi_predef_decls[] = {
@PSI_DECLS@
	{0}
};
#endif

#ifdef PSI_FUNC_REDIRS
@PSI_MACROS@

typedef void (*psi_func_ptr)();
static struct psi_func_redir {
	const char *name;
	psi_func_ptr func;
} psi_func_redirs[] = {
@PSI_REDIRS@
	{0}
};
#endif

#endif
