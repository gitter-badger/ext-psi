PSI_CHECK_SYSLOG() {
	AC_CHECK_HEADERS(syslog.h)

	PSI_CONST(LOG_PID, int)
	PSI_CONST(LOG_CONS, int)
	PSI_CONST(LOG_NDELAY, int)
	PSI_CONST(LOG_ODELAY, int)
	PSI_CONST(LOG_NOWAIT, int)
	PSI_CONST(LOG_KERN, int)
	PSI_CONST(LOG_USER, int)
	PSI_CONST(LOG_MAIL, int)
	PSI_CONST(LOG_NEWS, int)
	PSI_CONST(LOG_UUCP, int)
	PSI_CONST(LOG_DAEMON, int)
	PSI_CONST(LOG_AUTH, int)
	PSI_CONST(LOG_CRON, int)
	PSI_CONST(LOG_LPR, int)
	PSI_CONST(LOG_LOCAL0, int)
	PSI_CONST(LOG_LOCAL1, int)
	PSI_CONST(LOG_LOCAL2, int)
	PSI_CONST(LOG_LOCAL3, int)
	PSI_CONST(LOG_LOCAL4, int)
	PSI_CONST(LOG_LOCAL5, int)
	PSI_CONST(LOG_LOCAL6, int)
	PSI_CONST(LOG_LOCAL7, int)
	PSI_CONST(LOG_EMERG, int)
	PSI_CONST(LOG_ALERT, int)
	PSI_CONST(LOG_CRIT, int)
	PSI_CONST(LOG_ERR, int)
	PSI_CONST(LOG_WARNING, int)
	PSI_CONST(LOG_NOTICE, int)
	PSI_CONST(LOG_INFO, int)
	PSI_CONST(LOG_DEBUG, int)

	PSI_MACRO(int LOG_MASK, [(int pri)])
	PSI_MACRO(int LOG_UPTO, [(int pri)])

	PSI_DECL(void closelog, [(void)])
	PSI_DECL(void openlog, [(char *ident, int option, int facility)])
	PSI_DECL(void syslog, [(int priority, char *format)], vararg)
	PSI_DECL(int setlogmask, [(int mask)])
}
